<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="creakok.com.mapper.MemberMapper">

  <update id="updateMemberCategory" parameterType="MEMBER">
    update MEMBER set MEMBER_CATEGORY_CODE=#{member_category_code} where MEMBER_EMAIL=#{member_email}
  </update>

  <select id="selectAllByEmail" parameterType="String" resultType="Member">
    select * from MEMBER where MEMBER_EMAIL=#{member_email}
  </select>
  
  <select id="selectByEmail" parameterType="String" resultType="Member">
    select MEMBER_EMAIL from MEMBER where MEMBER_EMAIL=#{member_email}
  </select>
  
  <select id="selectByName" parameterType="String" resultType="Member">
    select MEMBER_NAME from MEMBER where MEMBER_NAME=#{member_name}
  </select>

  <select id="selectMemberOrigin" parameterType="String" resultType="String">
    select MEMBER_ORIGIN_CODE from MEMBER where MEMBER_EMAIL=#{member_email}
  </select>
  
  <update id="updatePassword" parameterType="MEMBER">
    update MEMBER set MEMBER_PASSWORD=#{member_password} where MEMBER_EMAIL=#{member_email}
  </update>
  
  <update id="updateNameByIndex" parameterType="MEMBER">
    update MEMBER set MEMBER_NAME=#{member_name} where MEMBER_INDEX=#{member_index}
  </update>
  
  <update id="updateNameByEmail" parameterType="MEMBER">
    update MEMBER set MEMBER_NAME=#{member_name} where MEMBER_EMAIL=#{member_email}
  </update>
  
  <insert id="insertMember" parameterType="MEMBER">
    <selectKey keyProperty="member_index" resultType="long" order="BEFORE">
    select nextval('MEMBER_INDEX_SEQ')
    </selectKey>
    insert into MEMBER(member_category_code, member_origin_code, member_email, member_name, member_password, member_joindate, member_index) 
      values(#{member_category_code}, #{member_origin_code}, #{member_email}, #{member_name}, #{member_password}, now(), ${member_index})
  </insert>
  
  <delete id="deleteMember" parameterType="String">
    delete from MEMBER where MEMBER_EMAIL=#{member_email}
  </delete>


  <insert id="insertSocialMember" parameterType="MEMBER">
    <selectKey keyProperty="member_index" resultType="long" order="BEFORE">
    select nextval('MEMBER_INDEX_SEQ')
    </selectKey>
    insert into MEMBER(member_category_code, member_origin_code, member_email, member_name, member_password, member_profile_pic, member_joindate, member_index) 
      values(#{member_category_code}, #{member_origin_code}, #{member_email}, #{member_name}, #{member_password}, #{member_profile_pic}, now(), ${member_index})
  </insert>

  <select id="selectOrderInfo" parameterType="String" resultType="Order_Info">
    select * from ORDER_INFO where MEMBER_EMAIL=#{member_email} order by BUY_DATE desc
  </select>

  <select id="selectPerPageOrder" resultType="Order_Info" parameterType="Member_OrderInfoVo">
    <![CDATA[select * from (select @ROWNUM:=@ROWNUM+1 as rnum, aa.* from
      (select * from ORDER_INFO where MEMBER_EMAIL=#{member_email} order by ORDER_INDEX desc limit ${(order_cp-1)*order_ps}, ${order_cp*order_ps} ) aa, (SELECT @ROWNUM := ${(order_cp-1)*order_ps}) TMP) bb
      where rnum>${(order_cp-1)*order_ps} and rnum<=${order_cp*order_ps}
    ]]>
  </select>
  
  <select id="selectOrderCountByEmail" resultType="long" parameterType="String">
      select COUNT(ORDER_INDEX) from ORDER_INFO where GOODS_INDEX=#{member_email}
  </select>   
       
  <select id="selectOrderCount" parameterType="String" resultType="long">
    select COUNT(ORDER_INDEX) from ORDER_INFO where MEMBER_EMAIL=#{member_email}
  </select> 
  
  <select id="selectOneOrderInfo" parameterType="long" resultType="Order_Info">
    select * from ORDER_INFO where ORDER_INDEX=${order_index}
  </select>
  
  
  <select id="selectPerPageFundingPay" resultType="Funding_payinfo" parameterType="Member_FundingPayInfoVo">    
    <![CDATA[select * from (select @ROWNUM:=@ROWNUM+1 as rnum, aa.* from
      (select * from FUNDING_PAYINFO where MEMBER_EMAIL=#{member_email} order by FUNDING_PAYINFO_INDEX desc limit ${(funding_pay_cp-1)*funding_pay_ps}, ${funding_pay_cp*funding_pay_ps} ) aa, (SELECT @ROWNUM := ${(funding_pay_cp-1)*funding_pay_ps}) TMP) bb
      where rnum>${(funding_pay_cp-1)*funding_pay_ps} and rnum<=${funding_pay_cp*funding_pay_ps}
    ]]>
  </select>
  
   <select id="selectFundingPayCount" parameterType="String" resultType="long">
    select COUNT(FUNDING_PAYINFO_INDEX) from FUNDING_PAYINFO where MEMBER_EMAIL=#{member_email}
  </select> 
  
  <select id="selectFundingPayInfo" parameterType="long" resultType="Funding_payinfo">
    select * from FUNDING_PAYINFO where FUNDING_PAYINFO_INDEX=${funding_payinfo_index}
  </select>
  
  <select id="selectContact" resultType="Contact">
    select * from CONTACT order by CONTACT_INDEX desc
  </select> 
  
   <update id="updateAnswer" parameterType="long">
       update CONTACT set CONTACT_OK = '답변완료' WHERE CONTACT_INDEX=${contact_index}
   </update>
   	
   	<!-- 크리에이터 가져오기 -->
   	<select id="getCreator" parameterType="String" resultType="Creator">
    	select * from CREATOR where MEMBER_EMAIL=#{member_email}
 	</select>
 	 
	<!--  크리에이터 탈퇴를 위한 관련 참조 자료 삭제 start -->
	<delete id="delFundingQnA" parameterType="String">
   		delete from FUNDING_QNA where MEMBER_NAME=#{member_name}
    </delete>
    
    <delete id="delFunding" parameterType="String">
   		delete from FUNDING where CREATOR_NAME=#{creator_name}
    </delete>
    
    <delete id="delGoodsQnA" parameterType="String">
   		delete from GOODS_QNA where MEMBER_NAME=#{member_name}
    </delete>
    
    <delete id="delGoodsReview" parameterType="String">
   		delete from GOODS_REVIEW where MEMBER_NAME=#{member_name}
    </delete>
    
    <delete id="delGoods" parameterType="String">
   		delete from GOODS where CREATOR_NAME=#{creator_name}
    </delete>
    
    <delete id="delBoardComment" parameterType="String">
   		delete from BOARD_COMMENT where MEMBER_EMAIL=#{member_email}
    </delete>
    
    <delete id="delBoard" parameterType="String">
   		delete from CREATOR_BOARD where MEMBER_EMAIL=#{member_email}
    </delete>
    <!--  크리에이터 탈퇴를 위한 관련 참조 자료 삭제 end -->
    
    <!--  크리에이터 삭제 -->
    <delete id="delCreator" parameterType="String">
   		delete from CREATOR where MEMBER_EMAIL=#{member_email}
    </delete>
    
</mapper>